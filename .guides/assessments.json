[
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-2650837085",
  "source": {
   "name": "Demo Question",
   "showName": false,
   "instructions": "## Reading Question\nRearrange the code blocks below to update **all** the records in the table.\n\nHint: You won't use all of the blocks.",
   "initial": "UPDATE trips\nSET trip_total_fare = 0.00;\nSET trip_total_fare = 0.00 #distractor\nWHERE id = 7; #distractor\nWHERE id = 7 #distractor\n",
   "options": "{\n  \"sortableId\": \"sortable\",\n  \"trashId\": \"sortableTrash\"\n}",
   "grader": "1",
   "guidance": "Because you are updating *all* the records in the table, you do not need the `WHERE` command.\n\nYour query must end with a semi-colon.\n\nThe correct solution is:\n```\nUPDATE trips\nSET trip_total_fare = 0.00;\n```",
   "points": 1,
   "oneTimeTest": true,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Parsons Puzzle"
     }
    ],
    "files": [
     "code/Demo.java",
     "python_demo.py"
    ],
    "opened": [
     {
      "type": "terminal",
      "panelNumber": 0,
      "content": "mysql;"
     }
    ]
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": "",
   "showGuidanceAfterResponseOption": {
    "type": "Always"
   }
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-1981899322",
  "source": {
   "name": "Practice MCQ",
   "showName": false,
   "instructions": "## Multiple Choice Question\nHow did the mySQL programming language get its name?",
   "multipleResponse": false,
   "answers": [
    {
     "_id": "448c7d4d-72d0-9b3e-3589-670669d72e51",
     "correct": false,
     "answer": "the creator wanted to imply ownership (mine)"
    },
    {
     "_id": "d84086ba-a7d2-a56f-5797-d25d50b7c06f",
     "correct": true,
     "answer": "the creator named it after his daughter"
    },
    {
     "_id": "7a53cab5-f47f-40cb-d68d-86470ef77d54",
     "correct": false,
     "answer": "the creator named it after a dolphin at his local aquarium "
    }
   ],
   "guidance": "MySQL is a combination of \"My\", the name of co-founder Michael Widenius's daughter and \"SQL\", the abbreviation for Structured Query Language\n",
   "showExpectedAnswer": true,
   "points": 1,
   "incorrectPoints": 0,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": "",
   "showGuidanceAfterResponseOption": {
    "type": "Always"
   }
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-2837664483",
  "source": {
   "name": "Fill in the Blank Demo Question",
   "showName": false,
   "instructions": "## Fill in the Blank\nFill in the blanks below.",
   "text": "True or False: mySQL is a compiled language. <<<False>>>\nTrue or False: You use semi-colons at the end of each query in mySQL. <<<True>>>",
   "guidance": "mySQL is a a relational database management system.\nmySQL use semi-colons at the end of each query.",
   "showExpectedAnswer": true,
   "points": 1,
   "showValues": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Fill in the Blanks"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": "",
   "tokens": {
    "blank": [
     "False",
     "True"
    ],
    "text": [
     "True or False: mySQL is a compiled language. ",
     0,
     "\nTrue or False: You use semi-colons at the end of each query in mySQL. ",
     0
    ]
   },
   "showGuidanceAfterResponseOption": {
    "type": "Always"
   }
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-21366716",
  "source": {
   "name": "Parsons Problem",
   "showName": false,
   "instructions": "## Parson's Problem\nRearrange the code blocks below into the proper order. **Note**, not all of the code blocks will be used.",
   "initial": "The first code block\nThe second code block\nThe third code block\nI am not correct #distractor\nI am not correct #distractor",
   "options": "{\n  \"sortableId\": \"sortable\",\n  \"trashId\": \"sortableTrash\"\n}",
   "grader": "1",
   "guidance": "The first code block\nThe second code block\nThe third code block",
   "points": 1,
   "oneTimeTest": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Parsons Puzzle"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": "",
   "showGuidanceAfterResponseOption": {
    "type": "Always"
   }
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-4266318069",
  "source": {
   "name": "Standard Code Test",
   "showName": true,
   "instructions": "When you have finished this assignment, click the Submit button below.",
   "command": "java -cp code/ Test",
   "preExecuteCommand": "javac code/Test.java",
   "guidance": "One way to solve this programming assignment is:\n\n```java\n    Scanner input = new Scanner(System.in);\n    \n    if(input.hasNextInt()) {\n      int num = input.nextInt();\n      System.out.print(num*3);\n    }\n    else { System.out.print(\"Please enter an integer\"); }\n```",
   "points": 1,
   "oneTimeTest": false,
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "showExpectedAnswer": true,
   "sequence": [
    {
     "arguments": "",
     "input": "3",
     "output": "9",
     "showFeedback": true,
     "feedback": "Your output should be 3 times the inputted value"
    },
    {
     "arguments": "",
     "input": "a",
     "output": "Please enter an integer",
     "showFeedback": true,
     "feedback": "If the user enters a non-integer value, you should print \"Please enter an integer\""
    }
   ],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Standard Code Test"
     }
    ],
    "files": [
     "code/Test.java",
     "code/code_test.py"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/Test.java"
     },
     {
      "type": "terminal",
      "panelNumber": 1,
      "content": ""
     }
    ]
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": "",
   "showGuidanceAfterResponseOption": {
    "type": "Always"
   }
  }
 },
 {
  "type": "test",
  "taskId": "test-1780171264",
  "source": {
   "name": "Code Test",
   "showName": false,
   "instructions": "Using the `EPDriver` database, update the `trip_total_fare` column of the `trips` table with a value of 25.00 where the `trip_datetime_end` is `NULL`\n\nPress the Check It! button when you are done.",
   "command": "node --no-warnings .guides/sqltests/sql-3-1.js",
   "arePartialPointsAllowed": false,
   "timeoutSeconds": 40,
   "guidance": "Correct answers:\n`USE EPDriver;`\n\nSingle line statement:\n\n`UPDATE trips SET trip_total_fare = 25.00 WHERE trip_datetime_end IS NULL;`\n\nMulti-line statement:\n```\nmysql> UPDATE trips \n    -> SET trip_total_fare = 25.00 \n    -> WHERE trip_datetime_end IS NULL;\n```",
   "points": 1,
   "oneTimeTest": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Advanced Code Test"
     }
    ],
    "files": [
     "code/Test.java"
    ],
    "opened": [
     {
      "type": "terminal",
      "panelNumber": 0,
      "content": "mysql"
     }
    ]
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": "",
   "showGuidanceAfterResponseOption": {
    "type": "Always"
   }
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-1875561210",
  "source": {
   "name": "codetest",
   "showName": false,
   "instructions": "Click the **Check it** button to submit your solution to the auto-grader.",
   "command": "mysql EPDriver < /home/codio/workspace/codetest.sql --table",
   "preExecuteCommand": "",
   "options": {
    "timeout": 30,
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false
   },
   "guidance": "",
   "showGuidanceAfterResponseOption": {
    "type": "Never"
   },
   "maxAttemptsCount": 0,
   "points": 20,
   "showExpectedAnswer": true,
   "arePartialPointsAllowed": false,
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "+----+---------------------+---------------------+-----------------+\n| id | trip_datetime_start | trip_datetime_end   | trip_total_fare |\n+----+---------------------+---------------------+-----------------+\n|  1 | 2015-09-15 03:20:59 | 2015-09-15 03:54:08 |           79.40 |\n|  2 | 2015-09-15 20:44:17 | 2015-09-15 21:18:58 |           91.79 |\n|  3 | 2015-09-15 04:01:04 | 2015-09-15 04:20:18 |           17.67 |\n|  4 | 2015-09-15 22:56:33 | NULL                |           25.00 |\n|  5 | 2015-09-15 21:12:33 | 2015-09-15 22:00:00 |           92.33 |\n|  6 | 2015-09-15 07:14:59 | 2015-09-15 08:24:19 |           85.38 |\n|  7 | 2015-09-15 15:48:41 | NULL                |           25.00 |\n|  8 | 2015-09-15 09:40:55 | 2015-09-15 10:05:32 |           43.73 |\n|  9 | 2015-09-15 10:00:08 | NULL                |           25.00 |\n| 10 | 2015-09-15 14:57:24 | 2015-09-15 15:11:26 |            4.50 |\n+----+---------------------+---------------------+-----------------+\n",
     "showFeedback": false,
     "feedback": ""
    }
   ],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Standard Code Test"
     }
    ],
    "files": [
     "codetest.sql"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "codetest.sql"
     },
     {
      "type": "terminal",
      "panelNumber": 1,
      "content": "clear;"
     }
    ]
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-2478681867",
  "source": {
   "name": "odbcquery",
   "showName": false,
   "instructions": "Click the **Check it** button to submit your code to the auto-grader.",
   "command": "python .guides/scripts/helper_mysql.py --db_host localhost --db_user root --db_pass codio --db_name EPDriver",
   "preExecuteCommand": "",
   "options": {
    "timeout": 30,
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false
   },
   "guidance": "",
   "showGuidanceAfterResponseOption": {
    "type": "Never"
   },
   "maxAttemptsCount": 0,
   "points": 20,
   "showExpectedAnswer": true,
   "arePartialPointsAllowed": false,
   "sequence": [
    {
     "arguments": "",
     "input": "SELECT * FROM trips;",
     "output": "id,trip_datetime_start,trip_datetime_end,trip_total_fare\n1,2015-09-15 03:20:59,2015-09-15 03:54:08,79.4\n2,2015-09-15 20:44:17,2015-09-15 21:18:58,91.79\n3,2015-09-15 04:01:04,2015-09-15 04:20:18,17.67\n4,2015-09-15 22:56:33,,25.0\n5,2015-09-15 21:12:33,2015-09-15 22:00:00,92.33\n6,2015-09-15 07:14:59,2015-09-15 08:24:19,85.38\n7,2015-09-15 15:48:41,,25.0\n8,2015-09-15 09:40:55,2015-09-15 10:05:32,43.73\n9,2015-09-15 10:00:08,,25.0\n10,2015-09-15 14:57:24,2015-09-15 15:11:26,4.5\n",
     "showFeedback": false,
     "feedback": ""
    }
   ],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Standard Code Test"
     }
    ],
    "files": [
     "codetest.sql"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "codetest.sql"
     },
     {
      "type": "terminal",
      "panelNumber": 1,
      "content": "clear;"
     }
    ]
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-2921911000",
  "source": {
   "name": "commandlinequery",
   "showName": false,
   "instructions": "Click the **Check it** button to submit your code to the auto-grader.",
   "command": "mysql EPDriver -e 'SELECT * FROM trips;' --table",
   "preExecuteCommand": "",
   "options": {
    "timeout": 30,
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false
   },
   "guidance": "",
   "showGuidanceAfterResponseOption": {
    "type": "Never"
   },
   "maxAttemptsCount": 0,
   "points": 20,
   "showExpectedAnswer": true,
   "arePartialPointsAllowed": false,
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "+----+---------------------+---------------------+-----------------+\n| id | trip_datetime_start | trip_datetime_end   | trip_total_fare |\n+----+---------------------+---------------------+-----------------+\n|  1 | 2015-09-15 03:20:59 | 2015-09-15 03:54:08 |           79.40 |\n|  2 | 2015-09-15 20:44:17 | 2015-09-15 21:18:58 |           91.79 |\n|  3 | 2015-09-15 04:01:04 | 2015-09-15 04:20:18 |           17.67 |\n|  4 | 2015-09-15 22:56:33 | NULL                |           25.00 |\n|  5 | 2015-09-15 21:12:33 | 2015-09-15 22:00:00 |           92.33 |\n|  6 | 2015-09-15 07:14:59 | 2015-09-15 08:24:19 |           85.38 |\n|  7 | 2015-09-15 15:48:41 | NULL                |           25.00 |\n|  8 | 2015-09-15 09:40:55 | 2015-09-15 10:05:32 |           43.73 |\n|  9 | 2015-09-15 10:00:08 | NULL                |           25.00 |\n| 10 | 2015-09-15 14:57:24 | 2015-09-15 15:11:26 |            4.50 |\n+----+---------------------+---------------------+-----------------+\n",
     "showFeedback": false,
     "feedback": ""
    }
   ],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Standard Code Test"
     }
    ],
    "files": [
     "codetest.sql"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "codetest.sql"
     },
     {
      "type": "terminal",
      "panelNumber": 1,
      "content": "clear;"
     }
    ]
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 }
]